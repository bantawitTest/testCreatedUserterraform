name: Terraform Plan and Apply

on:
  push:
    branches:
      - main
permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Install Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.5.0'  # Cambia a la versiÃ³n de Terraform que necesites

      # Step 3: Set up AWS OIDC credentials
      - name: Set up AWS OIDC credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::918691367691:role/GithubActionWorkflowOICD
          aws-region: us-east-1
          role-session-name: GitHubActions

      # Step 4: Terraform Init
      - name: Terraform Init
        run: terraform init

      # Step 5: Terraform Apply and Capture Output
      - name: Terraform Apply
        id: apply
        run: |
          terraform apply -auto-approve
          echo "::notice title=Terraform Apply Completed::Successfully applied Terraform changes"
          
          # Captura las salidas de Terraform
          USER_NAME=$(terraform output -raw user_name)
          ACCESS_KEY_ID=$(terraform output -raw access_key_id)
          ACCESS_KEY_SECRET=$(terraform output -raw access_key_secret)

          # Validar que las variables se capturaron correctamente
          echo "Captured USER_NAME: $USER_NAME"
          echo "Captured ACCESS_KEY_ID: $ACCESS_KEY_ID"
          echo "Captured ACCESS_KEY_SECRET: $ACCESS_KEY_SECRET"

          # Escribir estas variables en el archivo de entorno de GitHub
          echo "USER_NAME=${USER_NAME}" >> $GITHUB_ENV
          echo "ACCESS_KEY_ID=${ACCESS_KEY_ID}" >> $GITHUB_ENV
          echo "ACCESS_KEY_SECRET=${ACCESS_KEY_SECRET}" >> $GITHUB_ENV
